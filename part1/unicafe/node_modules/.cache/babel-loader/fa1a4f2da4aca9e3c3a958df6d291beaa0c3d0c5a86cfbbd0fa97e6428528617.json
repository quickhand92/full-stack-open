{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simon\\\\Desktop\\\\Dev\\\\full-stack-open\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 43\n  }, this);\n};\n_c = Button;\nconst StatisticLine = _ref2 => {\n  let {\n    text,\n    value\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 11\n  }, this);\n};\n_c2 = StatisticLine;\nconst App = () => {\n  _s();\n  const handleGoodClick = () => setGood(good + 1);\n  const handleNeutralClick = () => setNeutral(neutral + 1);\n  const handleBadClick = () => setBad(bad + 1);\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  if (good === 0 && bad === 0 && neutral === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"give feedback\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: handleGoodClick,\n        text: \"good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: handleNeutralClick,\n        text: \"neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: handleBadClick,\n        text: \"bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGoodClick,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutralClick,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBadClick,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(\"th\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"statistics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"good\",\n        value: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"neutral\",\n        value: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"bad\",\n        value: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"all\",\n        value: good + neutral + bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"average\",\n        value: (good - bad) / (good + neutral + bad)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"positive\",\n        value: good * 100 / (good + neutral + bad) + ' %'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Button","_ref","handleClick","text","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","StatisticLine","_ref2","value","_c2","App","_s","handleGoodClick","setGood","good","handleNeutralClick","setNeutral","neutral","handleBadClick","setBad","bad","_c3","$RefreshReg$"],"sources":["C:/Users/simon/Desktop/Dev/full-stack-open/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ handleClick, text }) => <button onClick={handleClick}>{text}</button>\n\nconst StatisticLine = ({ text, value }) => {\n  return (<tr>\n    <td>{text}</td>\n    <td>{value}</td>\n  </tr>)\n}\n\n\n\nconst App = () => {\n\n  const handleGoodClick = () => setGood(good + 1)\n  const handleNeutralClick = () => setNeutral(neutral + 1)\n  const handleBadClick = () => setBad(bad + 1)\n\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  if (good === 0 && bad === 0 && neutral === 0) {\n    return (<div>\n      <h1>give feedback</h1>\n      <Button handleClick={handleGoodClick} text='good' />\n      <Button handleClick={handleNeutralClick} text='neutral' />\n      <Button handleClick={handleBadClick} text='bad' />\n      <h1>statistics</h1>\n      <p>No feedback given</p>\n    </div>)\n  }\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button handleClick={handleGoodClick} text='good' />\n      <Button handleClick={handleNeutralClick} text='neutral' />\n      <Button handleClick={handleBadClick} text='bad' />\n\n      <table>\n        <tr><th><h1>statistics</h1></th></tr>\n        <StatisticLine text=\"good\" value={good} />\n        <StatisticLine text=\"neutral\" value={neutral} />\n        <StatisticLine text=\"bad\" value={bad} />\n        <StatisticLine text=\"all\" value={good + neutral + bad} />\n        <StatisticLine text=\"average\" value={(good - bad) / (good + neutral + bad)} />\n        <StatisticLine text=\"positive\" value={(good * 100 / (good + neutral + bad)) + ' %'} />\n      </table>\n\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}