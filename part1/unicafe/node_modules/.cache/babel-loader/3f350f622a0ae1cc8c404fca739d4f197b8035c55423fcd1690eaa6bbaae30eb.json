{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\simon\\\\Desktop\\\\Dev\\\\full-stack-open\\\\part1\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    handleClick,\n    text\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 43\n  }, this);\n};\n_c = Button;\nconst Statistics = _ref2 => {\n  let {\n    good,\n    bad,\n    neutral\n  } = _ref2;\n  if (good === 0 && bad === 0 && neutral === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"good \", good]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"neutral \", neutral]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"bad \", bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"all \", good + neutral + bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"average \", (good - bad) / (good + neutral + bad)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"positive \", good * 100 / (good + neutral + bad), \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  const StatisticsLine = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"good \", good]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"neutral \", neutral]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"bad \", bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"all \", good + neutral + bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"average \", (good - bad) / (good + neutral + bad)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"positive \", good * 100 / (good + neutral + bad), \" %\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  };\n};\n_c2 = Statistics;\nconst App = () => {\n  _s();\n  const handleGoodClick = () => setGood(good + 1);\n  const handleNeutralClick = () => setNeutral(neutral + 1);\n  const handleBadClick = () => setBad(bad + 1);\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleGoodClick,\n      text: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleNeutralClick,\n      text: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClick: handleBadClick,\n      text: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"all\",\n      value: good + neutral + bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"average\",\n      value: (good - bad) / (good + neutral + bad)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"positive\",\n      value: good * 100 / (good + neutral + bad)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), \" %\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Button","_ref","handleClick","text","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Statistics","_ref2","good","bad","neutral","StatisticsLine","_c2","App","_s","handleGoodClick","setGood","handleNeutralClick","setNeutral","handleBadClick","setBad","StatisticLine","value","_c3","$RefreshReg$"],"sources":["C:/Users/simon/Desktop/Dev/full-stack-open/part1/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({ handleClick, text }) => <button onClick={handleClick}>{text}</button>\n\nconst Statistics = ({ good, bad, neutral }) => {\n  if (good === 0 && bad === 0 && neutral === 0) {\n    return (\n      <>\n        <h1>statistics</h1>\n        <p>No feedback given</p>\n      </>\n    )\n  } else {\n    return (\n      <>\n        <h1>statistics</h1>\n        <p>good {good}</p>\n        <p>neutral {neutral}</p>\n        <p>bad {bad}</p>\n        <p>all {good + neutral + bad}</p>\n        <p>average {(good - bad) / (good + neutral + bad)}</p>\n        <p>positive {good * 100 / (good + neutral + bad)} %</p>\n      </>\n    )\n  }\n\n  const StatisticsLine = () => {\n    return (\n      <div>\n        <h1>statistics</h1>\n        <p>good {good}</p>\n        <p>neutral {neutral}</p>\n        <p>bad {bad}</p>\n        <p>all {good + neutral + bad}</p>\n        <p>average {(good - bad) / (good + neutral + bad)}</p>\n        <p>positive {good * 100 / (good + neutral + bad)} %</p>\n      </div>\n    )\n  }\n\n}\nconst App = () => {\n\n  const handleGoodClick = () => setGood(good + 1)\n  const handleNeutralClick = () => setNeutral(neutral + 1)\n  const handleBadClick = () => setBad(bad + 1)\n\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button handleClick={handleGoodClick} text='good' />\n      <Button handleClick={handleNeutralClick} text='neutral' />\n      <Button handleClick={handleBadClick} text='bad' />\n      {/* <Statistics good={good} bad={bad} neutral={neutral} /> */}\n      <StatisticLine text=\"good\" value={good} />\n      <StatisticLine text=\"neutral\" value={neutral} />\n      <StatisticLine text=\"bad\" value={bad} />\n      <StatisticLine text=\"all\" value={good + neutral + bad} />\n      <StatisticLine text=\"average\" value={(good - bad) / (good + neutral + bad)} />\n      <StatisticLine text=\"positive\" value={good * 100 / (good + neutral + bad)} /> %\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,MAAM,GAAGC,IAAA;EAAA,IAAC;IAAEC,WAAW;IAAEC;EAAK,CAAC,GAAAF,IAAA;EAAA,oBAAKJ,OAAA;IAAQO,OAAO,EAAEF,WAAY;IAAAG,QAAA,EAAEF;EAAI;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAU;AAAA;AAAAC,EAAA,GAAjFV,MAAM;AAEZ,MAAMW,UAAU,GAAGC,KAAA,IAA4B;EAAA,IAA3B;IAAEC,IAAI;IAAEC,GAAG;IAAEC;EAAQ,CAAC,GAAAH,KAAA;EACxC,IAAIC,IAAI,KAAK,CAAC,IAAIC,GAAG,KAAK,CAAC,IAAIC,OAAO,KAAK,CAAC,EAAE;IAC5C,oBACElB,OAAA,CAAAE,SAAA;MAAAM,QAAA,gBACER,OAAA;QAAAQ,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACnBZ,OAAA;QAAAQ,QAAA,EAAG;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA,gBACvB;EAEP,CAAC,MAAM;IACL,oBACEZ,OAAA,CAAAE,SAAA;MAAAM,QAAA,gBACER,OAAA;QAAAQ,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACnBZ,OAAA;QAAAQ,QAAA,GAAG,OAAK,EAACQ,IAAI;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAClBZ,OAAA;QAAAQ,QAAA,GAAG,UAAQ,EAACU,OAAO;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACxBZ,OAAA;QAAAQ,QAAA,GAAG,MAAI,EAACS,GAAG;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAChBZ,OAAA;QAAAQ,QAAA,GAAG,MAAI,EAACQ,IAAI,GAAGE,OAAO,GAAGD,GAAG;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACjCZ,OAAA;QAAAQ,QAAA,GAAG,UAAQ,EAAC,CAACQ,IAAI,GAAGC,GAAG,KAAKD,IAAI,GAAGE,OAAO,GAAGD,GAAG,CAAC;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACtDZ,OAAA;QAAAQ,QAAA,GAAG,WAAS,EAACQ,IAAI,GAAG,GAAG,IAAIA,IAAI,GAAGE,OAAO,GAAGD,GAAG,CAAC,EAAC,IAAE;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA,gBACtD;EAEP;EAEA,MAAMO,cAAc,GAAGA,CAAA,KAAM;IAC3B,oBACEnB,OAAA;MAAAQ,QAAA,gBACER,OAAA;QAAAQ,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACnBZ,OAAA;QAAAQ,QAAA,GAAG,OAAK,EAACQ,IAAI;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAClBZ,OAAA;QAAAQ,QAAA,GAAG,UAAQ,EAACU,OAAO;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACxBZ,OAAA;QAAAQ,QAAA,GAAG,MAAI,EAACS,GAAG;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eAChBZ,OAAA;QAAAQ,QAAA,GAAG,MAAI,EAACQ,IAAI,GAAGE,OAAO,GAAGD,GAAG;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACjCZ,OAAA;QAAAQ,QAAA,GAAG,UAAQ,EAAC,CAACQ,IAAI,GAAGC,GAAG,KAAKD,IAAI,GAAGE,OAAO,GAAGD,GAAG,CAAC;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACtDZ,OAAA;QAAAQ,QAAA,GAAG,WAAS,EAACQ,IAAI,GAAG,GAAG,IAAIA,IAAI,GAAGE,OAAO,GAAGD,GAAG,CAAC,EAAC,IAAE;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnD;EAEV,CAAC;AAEH,CAAC;AAAAQ,GAAA,GApCKN,UAAU;AAqChB,MAAMO,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEhB,MAAMC,eAAe,GAAGA,CAAA,KAAMC,OAAO,CAACR,IAAI,GAAG,CAAC,CAAC;EAC/C,MAAMS,kBAAkB,GAAGA,CAAA,KAAMC,UAAU,CAACR,OAAO,GAAG,CAAC,CAAC;EACxD,MAAMS,cAAc,GAAGA,CAAA,KAAMC,MAAM,CAACX,GAAG,GAAG,CAAC,CAAC;EAE5C,MAAM,CAACD,IAAI,EAAEQ,OAAO,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACoB,OAAO,EAAEQ,UAAU,CAAC,GAAG5B,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACmB,GAAG,EAAEW,MAAM,CAAC,GAAG9B,QAAQ,CAAC,CAAC,CAAC;EAEjC,oBACEE,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACtBZ,OAAA,CAACG,MAAM;MAACE,WAAW,EAAEkB,eAAgB;MAACjB,IAAI,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACpDZ,OAAA,CAACG,MAAM;MAACE,WAAW,EAAEoB,kBAAmB;MAACnB,IAAI,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC1DZ,OAAA,CAACG,MAAM;MAACE,WAAW,EAAEsB,cAAe;MAACrB,IAAI,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAElDZ,OAAA,CAAC6B,aAAa;MAACvB,IAAI,EAAC,MAAM;MAACwB,KAAK,EAAEd;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC1CZ,OAAA,CAAC6B,aAAa;MAACvB,IAAI,EAAC,SAAS;MAACwB,KAAK,EAAEZ;IAAQ;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAChDZ,OAAA,CAAC6B,aAAa;MAACvB,IAAI,EAAC,KAAK;MAACwB,KAAK,EAAEb;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACxCZ,OAAA,CAAC6B,aAAa;MAACvB,IAAI,EAAC,KAAK;MAACwB,KAAK,EAAEd,IAAI,GAAGE,OAAO,GAAGD;IAAI;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACzDZ,OAAA,CAAC6B,aAAa;MAACvB,IAAI,EAAC,SAAS;MAACwB,KAAK,EAAE,CAACd,IAAI,GAAGC,GAAG,KAAKD,IAAI,GAAGE,OAAO,GAAGD,GAAG;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC9EZ,OAAA,CAAC6B,aAAa;MAACvB,IAAI,EAAC,UAAU;MAACwB,KAAK,EAAEd,IAAI,GAAG,GAAG,IAAIA,IAAI,GAAGE,OAAO,GAAGD,GAAG;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,MAC/E;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAEV,CAAC;AAAAU,EAAA,CAzBKD,GAAG;AAAAU,GAAA,GAAHV,GAAG;AA2BT,eAAeA,GAAG;AAAA,IAAAR,EAAA,EAAAO,GAAA,EAAAW,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAZ,GAAA;AAAAY,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}